#!/usr/bin/python3
import os 
import argparse
import sys
import subprocess


def parse_arguments():
    #Parse args
    parser = argparse.ArgumentParser(
                            prog='smolpro',
                            description='Create a slurm job of the\
                                    MOLPRO input')
    parser.add_argument('inputfile', type=open,
                        help='''MOLPRO input file''')
    parser.add_argument('-o', nargs='?', type=argparse.FileType('w'),
                        metavar='OUTFILE', default=sys.stdout,
                        help='File to write the slurm job to.\
                              Defaults to STDOUT')
    parser.add_argument('-t', default=12, type=int, metavar='HOURS',
                        help='Time (in hours) for the calculation')
    parser.add_argument('-s', type=str, metavar='SCRATCH_DIR', default='./scratch',
                        help='Name of the scratch dir')
    parser.add_argument('-w', type=str, metavar='WFN', default='./wfn',
                        help='WFU file name')
    parser.add_argument('-m', default=00, type=int, metavar='MINUTES',
                        help='Time (in minutes) for the calculation')
    parser.add_argument('-c', default=32, type=int,
                        help='Number of cores to use. Default 32')
    parser.add_argument('-d', action='store_true',
                        help='Use debug queue')
    parser.add_argument('-R', action='store_true',
                        help='Specify to submit the calculation')
    args = parser.parse_args()
    args.inputfile.close()
    args.outname = os.path.splitext(os.path.basename(args.inputfile.name))[0]
    args.submitdir = os.path.dirname(os.path.abspath(args.inputfile.name))
    if args.d:
        args.t = 0
        args.m = args.m if args.m else 28
    return args

def create_script(args):
    HOME=os.environ['HOME']
    queue = 'debug' if args.d else 'regular'
    args.basename = os.path.basename(args.inputfile.name)
    print(
        '#!/bin/bash',
        f'#SBATCH -A m3200',
        f'#SBATCH --output={args.basename}.slurm',
        f'#SBATCH --qos={queue}',
        f'#SBATCH --nodes=1',
        f'#SBATCH --ntasks-per-node=64',
        f'#SBATCH -t {args.t}:{args.m}:00',
        f'#SBATCH -C cpu',
        'set echo',
        f'cd {args.submitdir}',
        f"/global/homes/t/taras/.local/molpro_2022.3/bin/molpro -n {args.c} -m 128m -W {args.w} -d {args.s} {args.basename}",
        f"rm {args.basename}.slurm",
        '', file=args.o, sep='\n')

def main():
    args = parse_arguments()
    create_script(args)
    args.o.close()
    if args.R and args.o != sys.stdout:
        subprocess.run(['sbatch', args.o.name])

if __name__ == '__main__':
    main()

